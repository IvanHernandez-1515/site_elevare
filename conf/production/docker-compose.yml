version: "3.9"

services:
  frontend:
    build:
      context: ${FRONTEND_LOCAL_PATH}
    container_name: ${CONTAINER_NAME}_frontend
    environment:
      - NODE_ENV=production
    command: sh -c "npm run build && npm install -g serve && serve -s dist"
    labels:
      - "traefik.enable=true"

      # HTTP â†’ redirect to HTTPS
      - "traefik.http.routers.${CONTAINER_NAME}-frontend.rule=Host(`${TRAEFIK_DOMAIN}`) || Host(`www.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.${CONTAINER_NAME}-frontend.entrypoints=${TRAEFIK_ENTRYPOINT_WEB}"
      - "traefik.http.routers.${CONTAINER_NAME}-frontend.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"

      # HTTPS
      - "traefik.http.routers.${CONTAINER_NAME}-frontend-secure.rule=Host(`${TRAEFIK_DOMAIN}`) || Host(`www.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.${CONTAINER_NAME}-frontend-secure.entrypoints=${TRAEFIK_ENTRYPOINT_WEBSECURE}"
      - "traefik.http.routers.${CONTAINER_NAME}-frontend-secure.tls=true"
      - "traefik.http.routers.${CONTAINER_NAME}-frontend-secure.tls.certresolver=myresolver"
      - "traefik.http.services.${CONTAINER_NAME}-frontend.loadbalancer.server.port=${FRONTEND_PORT_CONTAINER}"
    networks:
      - ${TRAEFIK_NETWORK}

  backend:
    build:
      context: ${BACKEND_LOCAL_PATH}
    container_name: ${CONTAINER_NAME}_backend
    environment:
      - NODE_ENV=production
      - PORT=${BACKEND_PORT_CONTAINER}
    command: node src/index.js
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${CONTAINER_NAME}-backend-secure.rule=Host(`api.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.${CONTAINER_NAME}-backend-secure.entrypoints=${TRAEFIK_ENTRYPOINT_WEBSECURE}"
      - "traefik.http.routers.${CONTAINER_NAME}-backend-secure.tls=true"
      - "traefik.http.routers.${CONTAINER_NAME}-backend-secure.tls.certresolver=myresolver"
      - "traefik.http.services.${CONTAINER_NAME}-backend.loadbalancer.server.port=${BACKEND_PORT_CONTAINER}"
    networks:
      - ${TRAEFIK_NETWORK}
  
  db:
    image: mysql:8
    container_name: ${CONTAINER_NAME}_db
    restart: always
    ports:
      - "${DB_PORT_LOCAL}:${DB_PORT_CONTAINER}"
    volumes:
      - ${ROOT_PATH}${MYSQL_LOCAL_PATH}:/var/lib/mysql
      - ${ROOT_PATH}${VOLUME_CONF}:/etc/mysql/conf.d
      - ${ROOT_PATH}${VOLUME_MIGRATIONS}:/docker-entrypoint-initdb.d
      - ${ROOT_PATH}${VOLUME_BACKUPS}:/backups
      # - ${ROOT_PATH}${VOLUME_LOGS}:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
        - ${TRAEFIK_NETWORK}
networks:
  traefik_net:
    external: true